@model IEnumerable<Emp_Attendance.Models.Emp_Details>

@{
    ViewData["Title"] = "Dashboard";
}

<head>
    <link rel="stylesheet" href="~/css/tablesheet.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/js/site.js" asp-append-version="true" />
    
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js" integrity="sha512-GsLlZN/3F2ErC5ifS5QtgpiJtWd43JWSuIgh7mbzZ8zBps+dvLusV+eNQATqgA/HdeKFVgA5v3S/cIrLF7QnIg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdn.jsdelivr.net/gh/linways/table-to-excel@v1.0.4/dist/tableToExcel.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script src="js/html2canvas.min.js"></script>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
      google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawChart);

      function drawChart() {
        @{
            var present=0;
            var absent =0;
            @foreach(var item in Model)
            {
                if(item.Attendance == "Yes")
                {
                    present++;
                }
                else
                {
                    absent++;
                }
            }
        }
        var data = google.visualization.arrayToDataTable([
          ['Task', 'Hours per Day'],
          ['Present',     @present],
          ['Absent',     @absent ]
        ]);

        var options = {
          title: 'Employee Attendance Pi-Chart'
        };

        var chart = new google.visualization.PieChart(document.getElementById('piechart'));

        chart.draw(data, options);
      }
    </script>

    <!-- jsPDF library -->
    <script src="js/jsPDF/dist/jspdf.umd.js"></script>
    
</head>

<h1>Employee Attendance Dashboard</h1>
<body>
    <div id="piechart" style="width: 900px; height: 500px;"></div>
</body>
<p>
    <a class="btn btn-primary" asp-action="Create">Create New</a>
    <button id="download-button" class="btn btn-primary">PDF</button>

    <script>
        const button = document.getElementById('download-button');

        function generatePDF() {
            // Choose the element that your content will be rendered to.
            const element = document.getElementById('table');
            // Choose the element and save the PDF for your user.
            html2pdf().from(element).save();
        }

        button.addEventListener('click', generatePDF);
    </script>

    <button class="btn btn-primary" id="btnExport" onclick="exportReportToExcel(this)">EXCEL</button>
    <script>
        function exportReportToExcel() {
        let table = document.getElementsByTagName("table"); // you can use document.getElementById('tableId') as well by providing id to the table tag
        TableToExcel.convert(table[0], { // html code may contain multiple tables so here we are refering to 1st table tag
            name: `export.xlsx`, // fileName you could use any name
            sheet: {
            name: 'Sheet 1' // sheetName
            }
        });
        }
    </script>
</p>


<div id="table">
    <table class="table table-striped table-class" id="table-id">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Designation)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BirthDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.JoiningDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Address)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PhoneNo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Salary)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
@foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Designation)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BirthDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.JoiningDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Salary)
                </td>
                <td id="nottable">
                    <a class="btn btn-dark" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
    }
        </tbody>
    </table>
    <div class="pagination row-cols-md-8">
    <a data-page="next" id="prev">&laquo;</a>
    <a href="#" class="active">1</a>
    <a href="#">2</a>
    <a href="#">3</a>
    <a href="#">4</a>
    <a href="#">5</a>
    <a href="#" class="next">&raquo;</a>
  </div>
</div>



